namespace CodeAbbey1
{

    class Program
    {                       //m-length      //n-length
        static int Distance(char[] left, char[] right)
        {
            int[,] d = new int[left.Length+1, right.Length+1];

            for (int x = 0; x <= left.Length; x++)
                d[x,0]=x;

            for (int x = 0; x <= right.Length; x++)
                d[0, x] = x;

            for (int x = 1; x <= right.Length; x++)
            {
                for (int y = 1; y <= left.Length; y++)
                {//int cost = (t[j - 1] == s[i - 1]) ? 0 : 1;

                    int cost = (right[x - 1] == left[y - 1]) ? 0 : 1;

                    d[y, x] = Math.Min(
                        Math.Min(d[y - 1, x] + 1, d[y, x - 1] + 1),
                        d[y - 1, x - 1] + cost);
                }
            }


            return d[left.Length, right.Length];
            
        }

        static void Main(string[] args)
        {
            string second = null;
            string answer = null;
           // int[,] numberarry;// = new int[4];
            string filePath = "inputfile.txt";
            StreamReader streamReader = new StreamReader(filePath);
            second = streamReader.ReadToEnd();
            streamReader.Close();
            second = second.Replace("\r\n", "|");
            string[] rows = second.Split('|');


            int temp = 0;
            foreach (string row in rows.Skip(1))
            {
                char[] left = row.Split(' ')[0].ToArray();
                char[] right = row.Split(' ')[1].ToArray();
                temp = Distance(left, right);

                answer = answer + temp.ToString() + ' ';
            }

            Console.WriteLine("The answer is:");
            Console.Write(answer.Trim());
            Console.ReadKey();

        }
    }
}
