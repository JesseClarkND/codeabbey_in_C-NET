namespace CodeAbbey1
{
    class Program
    {
        static void Find_Statistics(string sentence, double[] stats)
        {
            double number_of_letters = 0;
            for (int x = 0; x < stats.Length; stats[x++] = x - x)
                ;
            for (int x = 0; x < sentence.Length; x++)
            {
                if (sentence[x] != ' ')
                {
                    stats[sentence[x] - 65]++;
                    number_of_letters++;
                }
            }
            for (int x = 0; x < stats.Length; x++)
            {
                stats[x] = stats[x] / number_of_letters;
                stats[x] = Math.Round(stats[x], 3, MidpointRounding.AwayFromZero) * 100;
            }
        }

        static void Main(string[] args)
        {
            string second = null;
            string answer = null;
            decimal[] numberarry = new decimal[3];
            string filePath = "inputfile.txt";
            StreamReader streamReader = new StreamReader(filePath);
            second = streamReader.ReadToEnd();
            streamReader.Close();
            second = second.Replace("\r\n", "|");
            string[] rows = second.Split('|');
            string[] info = rows[0].Split(' ');
            double[] average = new double[] {8.1, 1.5, 2.8, 4.3, 13.0, 2.2, 2.0, 6.1, 7.0, 0.15, 0.77, 7.0, 2.4, 6.8, 7.5, 1.9, 0.095, 6.0, 6.3, 9.1, 2.8, 0.98, 2.4, 0.15, 2.0, 0.074};

            int roost = 0;

            foreach (string row in rows.Skip(1))
            {
                double[] encrypt_stats = new double[26];
                double[] running_totes = new double[26];
                
                char[] encrypted = row.ToCharArray();
                int shift = 0;
                bool foundit = false;
                while (foundit == false)
                {
                    for (int y = 0; y < encrypted.Length; y++)
                    {
                        if (encrypted[y] != ' ')
                        {//65-A 90-Z
                            roost = (int)encrypted[y] - shift;
                            if (roost < 65)
                                roost = 90 - (64 - roost);
                            encrypted[y] = (char)(roost);
                        }
                    }
                    string lol = new string(encrypted);

                    Find_Statistics(lol, encrypt_stats);
                    int count = 99;
                    for (int x = 0; x < 26; x++)
                    {
                       // running_totes[shift] = running_totes[shift] + ( encrypt_stats[x]-average[x]);
                        
                        double temparoo = Math.Abs((average[x] - encrypt_stats[x]));
                        if (temparoo > 0 && temparoo <= 1)
                            count -= 3;
                        else if (temparoo > 1 && temparoo <= 2)
                            count -= 2;
                        else if (temparoo <= 5)
                            count--;
                        else if (temparoo > 10)
                            count+=10;
                        else if (temparoo > 8)
                            count++;
                         
                    }
                    running_totes[shift] = count;// running_totes[shift] / 26;
                    shift++;
                    encrypted = row.ToCharArray();
                    if (shift == 26)
                        break;
                }
                encrypted = row.ToCharArray();
                int answer_shift = Array.IndexOf(running_totes, running_totes.Min());
                for (int y = 0; y < encrypted.Length; y++)
                {
                    if (encrypted[y] != ' ')
                    {//65-A 90-Z
                        roost = (int)encrypted[y] - answer_shift;
                        if (roost < 65)
                            roost = 90 - (64 - roost);
                        encrypted[y] = (char)(roost);
                    }
                }
                string lel = new string(encrypted);
                answer = answer + lel.Split(' ')[0] + ' ' + lel.Split(' ')[1] + ' ' + lel.Split(' ')[2] + ' ' + answer_shift.ToString() + ' '; ;

            }

            //temp = 0;

            Console.WriteLine("The answer is:");
            Console.Write(answer.Trim());
            Console.ReadKey();

        }
    }
}
