namespace CodeAbbey1
{
    class Program
    {


        static void Main(string[] args)
        {
            string second = null;
            string answer = null;
            int[] numberarry = new int[2];
            string filePath = "inputfile.txt";
            StreamReader streamReader = new StreamReader(filePath);
            second = streamReader.ReadToEnd();
            streamReader.Close();
            second = second.Replace("\r\n", "|");
            string[] rows = second.Split('|');

            BigInteger temp = 0;
            BigInteger N = 0;
            BigInteger K = 0;
            int arrayinc = 0;
            foreach (string row in rows.Skip(1))
            {
                //A * x + B * sqrt(x ^ 3) - C * exp(-x / 50) - D = 0
                string[] numbers = row.Split(' ');
                foreach (string number in numbers)
                {
                    numberarry[arrayinc++] = Convert.ToInt32(number);
                }
                arrayinc = 0;
                //numberarry
                //0 - N
                //1 - K
                /*
                      N!
                ------------- = C(N, K) - the number of different combinations
                K! * (N - K)!
                 */
                N = (BigInteger)numberarry[0];
                K = (BigInteger)numberarry[1];

                if (K != 0)
                {
                    BigInteger sloppy_temp = N - K;
                    //Calculate N!
                    if (N == 0)
                        N = 1;
                    else
                    {
                        temp = N-1;
                        while (temp >= 1)
                        {
                            N = N * temp;
                            temp--;
                        }
                    }
                    //Calculate K!
                    temp = K-1;
                    while (temp >= 1)
                    {
                        K = K * temp;
                        temp--;
                    }
                    //Calculate (N-K)! Assume N is always > K
                    temp = sloppy_temp;
                    BigInteger counter = temp - 1; ;
                    while (counter >= 1)
                    {
                        temp = temp * counter;
                        counter--;
                    }

                    temp = N / (K * temp);

                }
                else
                    temp = 1;

                answer = answer + temp.ToString() + ' ';
                temp = 0;
            }

            //temp = 0;

            Console.WriteLine("The answer is:");
            Console.Write(answer.Trim());
            Console.ReadKey();

        }
    }
}
